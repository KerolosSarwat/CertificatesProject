@*@model IEnumerable<ShahadatApp.Models.Talab>*@
@model PagedList.IPagedList<ShahadatApp.Models.Talab>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
<h2>طلبات مدفوعة و ليس لها موقف</h2>
@using (Html.BeginForm("PaidWithoutPosition", "Talab", FormMethod.Get))
{
<div class="row">
    <p class="col">
        @Html.TextBox("FromDate", ViewBag.FromDate is DateTime, new { @class = "form-control rounded-pill col-2", @type = "date", @style = "display:inline-block;" })
        @Html.TextBox("ToDate", ViewBag.ToDate is DateTime, new { @class = "form-control rounded-pill col-2", @type = "date", @style = "display:inline-block;" })
        
        @Html.DropDownList("PrintArea", ViewBag.PrintArea as IEnumerable<SelectListItem>, "الكل", htmlAttributes: new { @class = "form-control form-select col-2 rounded-pill", @style = "display:inline-block;" })
        <button type="submit" class="btn btn-warning rounded-pill" value="Search" style="display:inline-block">  <i class="bi bi-filter-circle"></i> فلتر </button>
    </p>
</div>

}
<table class="table">
    <tr>
        <th></th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().TalabNum)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Citizen.FullName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Citizen.Kawmy)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Citizen.Phone)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().ServiceType)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().ServicePostion)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().CardServicePostion)
        </th>
        <th></th>
    </tr>
    @{ int counter = 1;}
@foreach (var item in Model) {
    
    <tr>
        <td>@(counter++)</td>
        <td>
            @Html.DisplayFor(modelItem => item.TalabNum)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Citizen.FullName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Citizen.Kawmy)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Citizen.Phone).ToString().Remove(0,2)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ServiceType)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ServicePostion)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CardServicePostion)
        </td>
        <td>
            <button type="button" class="btn btn-sm btn-dark" data-bs-toggle="modal" data-bs-target="#exampleModal" kawmy=@item.Citizen.Kawmy talabNum=@item.TalabNum><i class="bi bi-qr-code-scan"></i></button>
            <i class="bi bi-pencil-square btn btn-dark btn-sm rounded-pill" onclick="location.href='@Url.Action("Edit", "Talab", new { id = item.TalabNum , previousUrl = Request.Url.ToString()})'"></i>
        </td>
    </tr>
}

</table>

<div class="text-center" dir="ltr">
    @Html.PagedListPager(Model, page => Url.Action("PaidWithoutPosition", new { page, fromDate = ViewBag.FromDate, toDate = ViewBag.ToDate, printArea = ViewBag.SelectedArea }))
</div>

@* Modal to Pass Data *@
<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true" dir="ltr">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body d-flex justify-content-center">
                <form>
                    <div class="mb-3">
                        <svg id="TalabNum"></svg>
                        <br />
                        <svg id="Kawmy"></svg>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script>
    const exampleModal = document.getElementById("exampleModal")
    
    exampleModal.addEventListener('show.bs.modal', event => {
        // Button that triggered the modal
        const button = event.relatedTarget
        // Extract info from data-bs-* attributes
        const kawmy = button.getAttribute('kawmy')
        const TalabNum = button.getAttribute('talabNum')
        debugger
        // If necessary, you could initiate an AJAX request here
        // and then do the updating in a callback.
        //
        // Update the modal's content.
        const modalBodyInput = exampleModal.querySelector('.modal-body input')
        JsBarcode("#Kawmy", kawmy);
        JsBarcode("#TalabNum", TalabNum);
        //modalBodyInput.value = kawmy
    })
</script>