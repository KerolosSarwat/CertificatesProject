
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - E.Center For Recruitment Services</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/Scripts/jquery.signalR-2.4.3.min.js")
    @Scripts.Render("~/signalr/Hubs/")
    <script src="~/Scripts/sweetalert.min.js"></script>
    @*<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>*@
    <link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
    
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.9.1/font/bootstrap-icons.css">
    <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/js/toastr.min.js"></script>
    
    <script type="text/javascript" src="https://unpkg.com/xlsx@0.15.1/dist/xlsx.full.min.js"></script>
    <script src="~/Scripts/JsBarcode.all.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-iYQeCzEYFbKjA/T2uDLTpkwGzCiq6soy8tYaI1GyVh/UjpbCx/TYkiZhlZB6+fzT" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/js/bootstrap.bundle.min.js" integrity="sha384-u1OknCvxWvY5kfmNBILK2hRnQC3Pr17a+RTT6rIHI7NnikvbZlHgTPOOmMi466C8" crossorigin="anonymous"></script>
    <style>
        /*body {
            background-image: url('../../Icons/wp2633863.png');
        }*/
        .material-symbols-outlined {
            font-size:2vw;
            display:inline;
        }
        li{
            font-size:1.3vw;
        }
        /*.dropdown:hover .dropdown-content {display: block;}*/
        .dark-mode {
            background-color: #1d2a35;
            color: white;
        }

        .light-mode {
            background-color: white;
            color: black;
        }


        .change {
            cursor: pointer;
            border: 1px solid #555;
            border-radius: 40%;
            width: 20px;
            text-align: center;
            padding: 5px;
            margin-left: 8px;
            background-color: white;
            color: black;
        }

        .dark {
            background-color: #222;
            color: #e6e6e6;
        }

        .switch {
            position: relative;
            display: inline-block;
            width: 46px;
            height: 20px;
            top: 25%;
        }

            .switch input {
                opacity: 0;
                width: 0;
                height: 0;
            }

        .slider {
            position: absolute;
            cursor: pointer;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: #ccc;
            -webkit-transition: .4s;
            transition: .4s;
        }

            .slider:before {
                position: absolute;
                content: "";
                height: 16px;
                width: 16px;
                left: 2px;
                bottom: 2px;
                background-color: white;
                -webkit-transition: .4s;
                transition: .4s;
            }

        input:checked + .slider {
            background-color: #2196F3;
        }

        input:focus + .slider {
            box-shadow: 0 0 1px #2196F3;
        }

        input:checked + .slider:before {
            -webkit-transform: translateX(23px);
            -ms-transform: translateX(23px);
            transform: translateX(26px);
        }

        /* Rounded sliders */
        .slider.round {
            border-radius: 34px;
        }

            .slider.round:before {
                border-radius: 50%;
            }

        #logo {
            width: 60px;
            height: 60px;
            transition: width 2s, height 2s;
        }

            #logo:hover {
                width: 100px;
                height: 100px;
            }
    </style>
</head>
<body style="direction:rtl" id="bodyId">
    <nav class="navbar navbar-expand-sm bg-dark navbar-dark fixed-top">
        <div class="container-fluid">
            <div class="navbar-header">
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#collapsibleNavbar">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <a href="@Url.Action("Index", "Home")">
                    <img src="~/Icons/favicon.png" alt="Home Page" style="width:42px;height:42px;">
                </a>
            </div>

            <div class="collapse navbar-collapse" id="collapsibleNavbar">

                <ul class="navbar-nav">
                    <li>
                        <a class="nav-link" href="@Url.Action("TalabatByArea", "Talab")">طلبات<i class="bi bi-cart"></i></a>
                    </li>
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown">السحبات</a>
                        <ul class="dropdown-menu">
                            @* <li>Html.ActionLink("طلبات", "TalabatByArea", "Talab", null, new { @class = "dropdown-item", style = "text-decoration:none;" })</li>*@
                            <li>
                                @*<li>@Html.ActionLink("تم ابلاغه الدفع", "TmEbla8", "Talab", null, new { @class = "dropdown-item", style = "text-decoration:none;" })</li>*@
                            <li class="dropdown-item">@Html.ActionLink("كشوفات المناطق", "AreaReports", "Talab", null, new {@class= "dropdown-item", style = "text-decoration:none; display:inline;" })<span class="material-symbols-outlined" style="display:inline">summarize</span></li>
                            <li class="dropdown-item">@Html.ActionLink("مرفقات الطلبات", "Morfkat", "Talab", null, new { @class = "dropdown-item", style = "text-decoration:none; display:inline;" }) <span class="material-symbols-outlined">image</span></li>
                            <li class="dropdown-item">@Html.ActionLink("تسليم الخدمات", "ServiceReady", "Talab", null, new {@class= "dropdown-item", style = "text-decoration:none; display:inline;" }) <span class="material-symbols-outlined">approval_delegation</span></li>
                            <li class="dropdown-item">@Html.ActionLink("طلبات ليس لها موقف", "PaidWithoutPosition", "Talab", null, new { @class = "dropdown-item", style = "text-decoration:none; display:inline;" })</li>
                            <li class="dropdown-item">@Html.ActionLink("مرفقات لم يتم سحبها", "MorfkatNotSent", "Citizen", null, new { @class = "dropdown-item", style = "text-decoration:none; display:inline;" })</li>
                        </ul>
                    </li>
                    <li>
                        <a class="nav-link" onclick="window.open('https://192.168.1.17:3000')">
                            استلام المرفقات
                        </a>
                    </li>
                    <li>
                        <a class="nav-link" href="@Url.Action("OrdersReport", "Talab")">
                            تقارير الطلبات
                            <span class="material-symbols-outlined" style="font-size:1.5vw">
                                query_stats
                            </span>
                        </a>
                    </li>
                </ul>

            </div>
            <div>
                <button class="btn" type="button" onclick="location.href='@Url.Action("Index", "Notification")'">
                    <span class="material-symbols-outlined" style="float:left; color:white;">notifications</span>
                    <span class="badge rounded-pill bg-danger" id="ntCnt"></span>
                </button>
            </div>
            <span class="material-symbols-outlined" style="color:white; float:left">dark_mode</span>
            <label class="notification-icon switch" style="float:left">

                <input type="checkbox" onclick="changeStatus()" id="check">
                @*<span class="round material-symbols-rounded">dark_mode</span>*@
                @*<span class="round material-symbols-rounded">light_mode</span>*@
                <span class="slider round"> </span>
            </label>
        </div>
    </nav>

    <div class="container body-content">
        <br />
        
        @RenderBody()
        <br />
        <script src="~/Scripts/DarkScript.js"></script>

    </div>
    <footer class="fixed-bottom text-center text-bg-dark">
        <p>&copy; @DateTime.Now.Year - E Center For Recruitment Service</p>
    </footer>
    @RenderSection("scripts", required: false)
</body>
</html>

<script>
    $("body").on("click", ".mybuttonclass", function (e) {

        var myBtn = $(e.currentTarget);
        var itemId = myBtn.attr("data-id");
        var innerSpan = $(myBtn.get(0).firstElementChild);
        e.preventDefault();

        swal({
            //title: "Are you sure?",
            text: "هل تريد ارسال رسالة إلى" + itemId,
            icon: "warning",
            buttons: true,
            dangerMode: true
        }).then(function (value) {

            if (value === true) {
                myBtn.addClass("disabled");
                innerSpan.addClass("fa-spin");
                debugger
                $.ajax({

                    url: '@Url.Action("TalabatByArea", "Talab")',
                    data: { "id": itemId },
                    dataType: "json",
                    success: function (result) {
                        if (result.success === true) {
                            swal({
                                title: "Done!",
                                text: result.message,
                                icon: "success"
                            });
                        } else {
                            swal({
                                title: "Error!",
                                text: result.message,
                                icon: "error"
                            });
                        }

                        myBtn.removeClass("disabled");
                        innerSpan.removeClass("fa-spin");
                    },
                    error: function (xhr, textStatus, error) {
                        swal({
                            title: "Error!",
                            text: xhr.statusText,
                            icon: textStatus
                        });

                        myBtn.removeClass("disabled");
                        innerSpan.removeClass("fa-spin");
                    },
                });
            }
        });
    });

    $(function () {
        // Reference the auto-generated proxy for the hub.

        //var progress = $.connection.myHub;
        var hub = $.connection.myHub;


        // Declare a function on the hub hub so the server can invoke it
        hub.client.displayStatus = function () {
            getData();
            toastr.options = {
                positionClass: "toast-bottom-right",
                timeOut: 3000
            };
            toastr.warning(message);
        };

        // Start the connection
        $.connection.hub.start();
        getData();



        function getData() {
            var divNotificaion = $('#divNotificaion');
            $.ajax({
                url: '/Notification/GetNotification',
                type: 'GET',
                datatype: 'json',
                success: function (data) {
                    
                    data = $.parseJSON(data);
                    if (data.length > 0) {
                        divNotificaion.empty();
                        //// set Count
                        $('#ntCnt').text(data.length);


                        ///Make notification html
                        for (var i = 0; i < data.length; i++) {
                            //var Url = "'location.href="@@Url.Action("DeleteNotification", "Notification", new { id ="+ data[i].NotificationID+"})'";

                            var notification = '<div class="alert alert-success alert-dismissable fade show">' +
                                '<button type="button" class="btn-close closeBtnclass" data-id="' + data[i].NotificationID + '" data-bs-dismiss="alert"></button>'
                        + data[i].Message +
                    '</div>'
                            divNotificaion.append(notification);
                        }

                    }
                }, error: function (r, e, w) {
                }
            });
        }
        
        // Create a function that the hub can call back to display messages.
        hub.client.DisplayNotification = function (message) {

            toastr.options = {
                positionClass: "toast-bottom-right",
                timeOut: 3000
            };
            toastr.warning(message);
        };

        //$.connection.hub.start()
    });
</script>
